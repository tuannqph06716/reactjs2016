import * as React from 'react';
import { InternalFieldName, FieldRefs, UnpackNestedValue, FieldValue } from '../types/form';
import { DeepPartial } from '../types/utils';
declare const _default: <TFieldValues extends Record<string, any>>(fieldsRef: React.MutableRefObject<Partial<Record<InternalFieldName<TFieldValues>, import("../types/form").Field>>>, unmountFieldsStateRef: React.MutableRefObject<Record<string, any>>, defaultValuesRef: React.MutableRefObject<FieldValue<UnpackNestedValue<TFieldValues>> | UnpackNestedValue<DeepPartial<TFieldValues>>>, search?: string | (keyof TFieldValues & string) | {
    nest: boolean;
} | InternalFieldName<TFieldValues>[] | undefined) => any;
export default _default;
